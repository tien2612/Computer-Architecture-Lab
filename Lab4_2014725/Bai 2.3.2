.data
message: .asciiz "Nhap vao mang co 10 phan tu: \n"
range_message: .asciiz "\nRange giua max va min la: "
iArray: .space 40
space: .asciiz " "
.text
	li	$v0, 4
	la	$a0, message
	syscall
	#a loop to enter user numbers into iArray
	enter_Array:
		beq	$t0, 40, exit_enter
		li	$v0, 5
		syscall
		sb	$v0, iArray($t0)
		addi	$t0, $t0, 4
		j enter_Array
	exit_enter:
	li	$t0, 0
	#print user array
	print_Array:
		beq	$t0, 40, exit_print
		lb	$s0, iArray($t0)
		
		li	$v0, 1
		addi	$a0, $s0, 0
		syscall
		addi	$t0, $t0, 4
		li	$v0, 4
		la	$a0, space
		syscall
	j print_Array
exit_print:
	
	la	$a0, iArray 	#load address of iArray
	li	$a1, 10 	#size of iArray
	
	jal range
	
	li	$v0, 4
	la	$a0, range_message
	syscall
	
	sub	$t3, $t1, $t2	#range = max - min
	li	$v0, 1		#print range
	move	$a0, $t3
	syscall
	
	li	$v0, 10		#exit()
	syscall 
	
range:
	addi	$sp, $sp, -4	#adjust stack for 1 item
	sw	$ra, 0($sp)	#store range return address
	jal max
	jal min	
	lw	$ra, 0($sp)	#load range return address
	addi	$sp, $sp, 4	#pop 1 item from stack
	jr	$ra
#find max of iArray	
max:
	li	$t0, 4
	lb	$t1, iArray($zero) 	#t1 = max
	find_max:
		beq	$t0, 40, exit_find_max
		lb	$s0, iArray($t0)
		addi	$t0, $t0, 4		#index += 4
		ble	$s0, $t1, find_max 	#if iArray[i] < max, index++
		add	$t1, $s0, $zero    	#else max = iArray[i]
		
		j	find_max
	exit_find_max:
	jr	$ra
#find min of iArray
min:
	li	$t0, 4
	lb	$t2, iArray($zero) 	#t2 = min
	find_min:
		beq	$t0, 40, exit_find_max
		lb	$s0, iArray($t0) 
		addi	$t0, $t0, 4
		bge	$s0, $t2, find_min 	#if iArray[i] > min, index++
		add	$t2, $s0, $zero    	#else min = iArray[i]
		j	find_min
	exit_find_min:
	jr	$ra

